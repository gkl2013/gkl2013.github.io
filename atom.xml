<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>gkl2013</title>
  
  <subtitle>GKL2013 BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gkl2013.top/"/>
  <updated>2018-03-02T02:19:26.980Z</updated>
  <id>https://gkl2013.top/</id>
  
  <author>
    <name>gkl2013</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Electron绕坑指南</title>
    <link href="https://gkl2013.top/2018/03/01/Electron/"/>
    <id>https://gkl2013.top/2018/03/01/Electron/</id>
    <published>2018-02-28T16:00:00.000Z</published>
    <updated>2018-03-02T02:19:26.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、electron-builder-Application-entry-file-does-not-exist"><a href="#一、electron-builder-Application-entry-file-does-not-exist" class="headerlink" title="一、electron-builder Application entry file does not exist"></a>一、electron-builder Application entry file does not exist</h2><p>这个是由于webpack的编译后的文件与electron-builder打包指定的文件夹冲突了，将webpack的输出文件夹更改下就OK了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、electron-builder-Application-entry-file-does-not-exist&quot;&gt;&lt;a href=&quot;#一、electron-builder-Application-entry-file-does-not-exist&quot; class=
      
    
    </summary>
    
      <category term="前端开发" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Electron" scheme="https://gkl2013.top/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>windows下安装puppeteer</title>
    <link href="https://gkl2013.top/2018/02/08/puppeteer/"/>
    <id>https://gkl2013.top/2018/02/08/puppeteer/</id>
    <published>2018-02-07T16:00:00.000Z</published>
    <updated>2018-02-27T02:24:39.667Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>安装puppeteer时会下载Chromium，window下的Chromium有100M左右。</p></blockquote><p>下载Chromium是需要科学上网的，我一般用Shadowsocks翻墙，可是当我安装时还是失败，经过查询资料才知道虽然使用了Shadowsocks代理，但是windows下的cmd并没有代理，可以通过以下两种方式解决。</p><h2 id="一、设置cmd代理："><a href="#一、设置cmd代理：" class="headerlink" title="一、设置cmd代理："></a>一、设置cmd代理：</h2><p>控制代理的环境变量分别是 http_proxy、http_proxy_user、http_proxy_pass，不区分大小写，分别代表代理地址（应是 <a href="http://ip:port" target="_blank" rel="noopener">http://ip:port</a> 的形式）、代理用户名、代理密码，一般情况下只需要配置 http_proxy 即可（其余两个参数暂无条件测试，是否有作用未知），参数格式大致如下所示。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#设置参数</span><br><span class="line">set http_proxy=http:<span class="comment">//xxxx:1080</span></span><br><span class="line">set http_proxy_user=xxx</span><br><span class="line">set http_proxy_pass=xxx</span><br><span class="line"></span><br><span class="line">#删除参数</span><br><span class="line">set http_proxy=</span><br><span class="line">set http_proxy_user=</span><br><span class="line">set http_proxy_pass=</span><br></pre></td></tr></table></figure><br>配置好了之后就可以直接使用命令行安装了，不需要在安装时跳过安装chrome了，方便快捷。</p><h2 id="二、使用Proxifier"><a href="#二、使用Proxifier" class="headerlink" title="二、使用Proxifier"></a>二、使用Proxifier</h2><p>Proxifier是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持 64位系统，支持Xp，Vista，Win7，MAC OS ,支持socks4，socks5，http代理协议，支持TCP，UDP协议，可以指定端口，指定IP，指定域名，指定程序等运行模式，兼容性非常好，和之前介绍的SocksCap属于同类软件，不过SocksCap已经很久没更新了。有许多网络应用程序不支持通过代理服务器工作，Proxifier 解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外，它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。</p><ol><li>打开软件，添加代理信息，选择：菜单栏–&gt;&gt;Profile–&gt;&gt;Proxy Servers。<br><img src="http://oxb3h3vd2.bkt.clouddn.com/18-02-27/Proxifier_1.jpg" alt="图片"></li><li>选择add添加服务器，地址填127.0.0.1，端口填本地ShadowSocks的端口，一般是1080。<br><img src="http://oxb3h3vd2.bkt.clouddn.com/18-02-27/Proxifier_2.jpg" alt="图片"></li><li>按确认按钮之后，Proxifier会弹出一个对话框，要求建立一个规则，让ShadowSocks直接访问网络，否则的话会引起死循环，这时候选择OK建立规则即可。<br><img src="http://oxb3h3vd2.bkt.clouddn.com/18-02-27/Proxifier_3.jpg" alt="图片"><br>这样就可以实现全局代理。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;安装puppeteer时会下载Chromium，window下的Chromium有100M左右。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载Chromium是需要科学上网的，我一般用Shadowsocks翻墙，可是当我安装时还是失败，经过查询资
      
    
    </summary>
    
      <category term="前端工具" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="NPM" scheme="https://gkl2013.top/tags/NPM/"/>
    
  </entry>
  
  <entry>
    <title>搭建私有VPN</title>
    <link href="https://gkl2013.top/2018/02/03/%E6%90%AD%E5%BB%BAVPN/"/>
    <id>https://gkl2013.top/2018/02/03/搭建VPN/</id>
    <published>2018-02-02T16:00:00.000Z</published>
    <updated>2018-02-03T08:04:44.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我使用的<a href="https://www.vultr.com/?ref=7289429" target="_blank" rel="noopener">vultr</a>，最初选择只是觉得该网站的界面不错，后面发现用这也挺方便的，可以随时新建或销毁服务器。选择系统时推荐CentOS 6</p></blockquote><h2 id="一、CentOS一键安装shadowsocks脚本"><a href="#一、CentOS一键安装shadowsocks脚本" class="headerlink" title="一、CentOS一键安装shadowsocks脚本"></a>一、CentOS一键安装shadowsocks脚本</h2><p>Shadowsocks是一个基于python的轻量级socks代理软件,可以在任何系统简单的实现访问被屏蔽的网站。网友也常称为科学上网，简称ss,在此分享与记录CentOS一键安装shadowsocks脚本。</p><h3 id="1-使用root用户登录，运行以下命令："><a href="#1-使用root用户登录，运行以下命令：" class="headerlink" title="1. 使用root用户登录，运行以下命令："></a>1. 使用root用户登录，运行以下命令：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https:<span class="comment">//raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span></span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">./shadowsocks.sh <span class="number">2</span>&gt;&amp;<span class="number">1</span> | tee shadowsocks.log</span><br></pre></td></tr></table></figure><h3 id="2-安装完成后，脚本提示如下："><a href="#2-安装完成后，脚本提示如下：" class="headerlink" title="2. 安装完成后，脚本提示如下："></a>2. 安装完成后，脚本提示如下：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, shadowsocks install completed!</span><br><span class="line">Your Server IP:your_server_ip</span><br><span class="line">Your Server Port:<span class="number">8989</span></span><br><span class="line">Your Password:your_password</span><br><span class="line">Your Local IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">Your Local Port:<span class="number">1080</span></span><br><span class="line">Your Encryption Method:aes<span class="number">-256</span>-cfb</span><br><span class="line"></span><br><span class="line">Welcome to visit:http:<span class="comment">//teddysun.com/342.html</span></span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure><h3 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3. 配置文件"></a>3. 配置文件</h3><p>配置文件路径为：/etc/shadowsocks.json<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"your_server_ip"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>: <span class="number">8989</span>,</span><br><span class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="string">"password"</span>: <span class="string">"yourpassword"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"aes-256-cfb"</span>,<span class="comment">//加密方式</span></span><br><span class="line">    <span class="string">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="4-相关命令"><a href="#4-相关命令" class="headerlink" title="4. 相关命令"></a>4. 相关命令</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#启动</span><br><span class="line">/etc/init.d/shadowsocks start</span><br><span class="line">#停止</span><br><span class="line">/etc/init.d/shadowsocks stop</span><br><span class="line">#重启</span><br><span class="line">/etc/init.d/shadowsocks restart</span><br><span class="line">#状态</span><br><span class="line">/etc/init.d/shadowsocks status</span><br></pre></td></tr></table></figure><h2 id="二、-BBR加速"><a href="#二、-BBR加速" class="headerlink" title="二、 BBR加速"></a>二、 BBR加速</h2><blockquote><p>BBR 是一个由谷歌社区开发的 TCP拥塞控制技术（优化 TCP 连接），用于网络加速，类似于锐速。不支持OpenVZ的机器。我们这里把bbr安装到我们服务器，加速shadowsocks。</p></blockquote><h4 id="秋水逸冰系列脚本："><a href="#秋水逸冰系列脚本：" class="headerlink" title="秋水逸冰系列脚本："></a>秋水逸冰系列脚本：</h4><p>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+<br>内存要求：≥128M<br>更新日期：2017 年 05 月 15 日</p><p>关于本脚本</p><p>1、本脚本已在 Vultr 上的 VPS 全部测试通过。<br>2、当脚本检测到 VPS 的虚拟方式为 OpenVZ 时，会提示错误，并自动退出安装。<br>3、脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。<br>4、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。<br>一键脚本：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https:<span class="comment">//github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</span></span><br></pre></td></tr></table></figure><br>验证方法：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line"># 查看内核版本，含有 4.9.0 就表示 OK 了</span><br><span class="line"># ————————————</span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line"># 返回值一般为：</span><br><span class="line"># net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br><span class="line"># ————————————</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br><span class="line"># 返回值一般为：</span><br><span class="line"># net.ipv4.tcp_congestion_control = bbr</span><br><span class="line"># ————————————</span><br><span class="line">sysctl net.core.default_qdisc</span><br><span class="line"># 返回值一般为：</span><br><span class="line"># net.core.default_qdisc = fq</span><br><span class="line"># ————————————</span><br><span class="line">lsmod | grep bbr</span><br><span class="line"># 返回值有 tcp_bbr 模块即说明bbr已启动。</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我使用的&lt;a href=&quot;https://www.vultr.com/?ref=7289429&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vultr&lt;/a&gt;，最初选择只是觉得该网站的界面不错，后面发现用这也挺方便的，可以随时新
      
    
    </summary>
    
      <category term="vpn" scheme="https://gkl2013.top/categories/vpn/"/>
    
    
      <category term="VPN" scheme="https://gkl2013.top/tags/VPN/"/>
    
  </entry>
  
  <entry>
    <title>博客性能优化之图片优化</title>
    <link href="https://gkl2013.top/2017/11/16/%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E4%BC%98%E5%8C%96/"/>
    <id>https://gkl2013.top/2017/11/16/博客访问优化/</id>
    <published>2017-11-15T16:00:00.000Z</published>
    <updated>2017-11-16T09:03:08.659Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>HTTP Archieve有个统计，图片内容已经占到了互联网内容总量的62%，也就是说超过一半的流量和时间都用来下载图片。从性能优化的角度看，图片也绝对是优化的热点和重点之一，Google PageSpeed或者Yahoo的14条性能优化规则无不把图片优化作为重要的优化手段，本文覆盖了Web图片优化的方方面面，从基本的图片格式选择、到尚未被广泛支持的响应式图片均有所提及。</p></blockquote><h2 id="一、选择合适的图片格式"><a href="#一、选择合适的图片格式" class="headerlink" title="一、选择合适的图片格式"></a>一、选择合适的图片格式</h2><p>在选择合适的图片格式之前请先思考这里必须使用图片么，skapp主题默认文章的封面和文章页的banner为同一个图片，可有的文章页不一定需要banner，我对其进行的细微修改，使其可配置。<br>常见三种的图片格式：</p><ul><li>JPGE，有损压缩，不支持透明度，不支持动画，适用于复杂颜色及形状、尤其是照片</li><li>GIF，无损压缩，支持透明度和动画，适用于简单颜色和动画</li><li>PNG，无损压缩，支持透明度但不支持动画，适用于有透明度的图片<br>选择过程如下图：<br><img src="http://oxb3h3vd2.bkt.clouddn.com/17-11-16/color.jpg" alt=""></li></ul><p><strong>颜色丰富的照片，JPG是通用的选择</strong></p><ul><li>人眼的结构很适合查看JPG压缩后的照片，可以充分的忽略并在脑中补齐细节</li><li>JPG在压缩率不高时保留的细节还是不错的</li></ul><p><strong>如果需要较通用的动画，GIF是唯一可用的选择</strong></p><ul><li>GIF支持的颜色范围为256色，而且仅支持完全透明/完全不透明</li><li>GIF在显示颜色丰富的动画时可能出现颜色不全、边缘锯齿等问题</li></ul><p><strong>如果需要清晰的显示颜色丰富的图片，PNG比较好</strong></p><ul><li>PNG-8能够显示256种颜色，但能够同时支持256阶透明，因此颜色数较少但需要半透明的情景（如微信动画大表情）可以考虑PNG-8</li><li>PNG-24可以显示真彩色，但不支持透明，颜色丰富的图片推荐使用（如屏幕截图、界面设计图）</li><li>PNG-32可以显示真彩色，同时支持256阶透明，效果最好但尺寸也最大</li></ul><h2 id="二、图片质量的选择"><a href="#二、图片质量的选择" class="headerlink" title="二、图片质量的选择"></a>二、图片质量的选择</h2><p>当我们使用PS保存图片的时候可以选择图片的质量，推荐60-80的范围，见下图：<br>当图片的品质为100%时：<br><img src="http://oxb3h3vd2.bkt.clouddn.com/17-11-16/old.png" alt=""><br>当图片的品质为60%时：<br><img src="http://oxb3h3vd2.bkt.clouddn.com/17-11-16/new.png" alt=""><br>我们可以清楚的看见当品质为100%时图片有104k，当品质为60%时只有41k了，并且看不出两张图片之前的明显区别。保存时注意将“元数据”选择无，防止信息泄露。<br>“元数据”详情：<a href="http://www.freebuf.com/articles/5184.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/5184.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;HTTP Archieve有个统计，图片内容已经占到了互联网内容总量的62%，也就是说超过一半的流量和时间都用来下载图片。从性能优化的角度看，图片也绝对是优化的热点和重点之一，Google PageSpeed或者Yahoo的14条性能优化规则无不把
      
    
    </summary>
    
      <category term="前端" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="WEB性能优化" scheme="https://gkl2013.top/tags/WEB%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>WebStorm 最新版激活方式</title>
    <link href="https://gkl2013.top/2017/11/09/WebStorm%E6%9C%80%E6%96%B0%E7%89%88%E6%BF%80%E6%B4%BB%E6%96%B9%E5%BC%8F/"/>
    <id>https://gkl2013.top/2017/11/09/WebStorm最新版激活方式/</id>
    <published>2017-11-08T16:00:00.000Z</published>
    <updated>2018-01-30T06:45:09.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WebStorm-2017-2-x"><a href="#WebStorm-2017-2-x" class="headerlink" title="WebStorm 2017.2.x"></a>WebStorm 2017.2.x</h2><p>注册时，在打开的License Activation窗口中选择“License server”，在输入框输入下面的网址：</p><ol><li><a href="http://idea.imsxm.com" target="_blank" rel="noopener">http://idea.imsxm.com</a></li><li><a href="http://idea.iteblog.com/key.php" target="_blank" rel="noopener">http://idea.iteblog.com/key.php</a></li></ol><h2 id="WebStorm-2017-3-x"><a href="#WebStorm-2017-3-x" class="headerlink" title="WebStorm 2017.3.x"></a>WebStorm 2017.3.x</h2><p>WebStorm屏蔽了之前的激活方式，目前有效的方式是“反向代理”</p><ol><li>首先配置hosts文件：account.jetbrains.com 0.0.0.0</li><li>下载对应系统的工具，<a href="https://github.com/ilanyu/ReverseProxy/releases/tag/v1.0" target="_blank" rel="noopener">https://github.com/ilanyu/ReverseProxy/releases/tag/v1.0</a></li><li>下载后运行，将运行后的结果中的链接copy出来如：<a href="http://0.0.0.0:8888，然后打开的License" target="_blank" rel="noopener">http://0.0.0.0:8888，然后打开的License</a> Activation窗口中选择“License server”，在输入框输入该地址即可。运行结果如下：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018/01/30 14:39:36 Listening on 0.0.0.0:8888, forwarding to http://idea.lanyus.com:80</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;WebStorm-2017-2-x&quot;&gt;&lt;a href=&quot;#WebStorm-2017-2-x&quot; class=&quot;headerlink&quot; title=&quot;WebStorm 2017.2.x&quot;&gt;&lt;/a&gt;WebStorm 2017.2.x&lt;/h2&gt;&lt;p&gt;注册时，在打开的Li
      
    
    </summary>
    
      <category term="工具" scheme="https://gkl2013.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="WebStorm" scheme="https://gkl2013.top/tags/WebStorm/"/>
    
  </entry>
  
  <entry>
    <title>SASS用法指南</title>
    <link href="https://gkl2013.top/2017/11/08/SaaS_usage_guide/"/>
    <id>https://gkl2013.top/2017/11/08/SaaS_usage_guide/</id>
    <published>2017-11-07T16:00:00.000Z</published>
    <updated>2018-02-03T03:43:27.356Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>学过CSS的人都知道，它不是一种编程语言。你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。<br>很自然地，有人就开始为CSS加入编程元素，这被叫做”CSS预处理器”（css preprocessor）。它的基本思想是，用一种专门的编程语言，进行网页样式设计，然后再编译成正常的CSS文件。<br>各种”CSS预处理器”之中，我自己最喜欢SASS，觉得它有很多优点，打算以后都用它来写CSS。下面是我整理的用法总结，供自己开发时参考，相信对其他人也有用。</p></blockquote><h1 id="一、什么是SASS"><a href="#一、什么是SASS" class="headerlink" title="一、什么是SASS"></a>一、什么是SASS</h1><p>SASS是一种CSS的开发工具，提供了许多便利的写法，大大节省了设计者的时间，使得CSS的开发，变得简单和可维护。<br>本文总结了SASS的主要用法。我的目标是，有了这篇文章，日常的一般使用就不需要去看官方文档了。</p><p>#二、安装和使用</p><h2 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h2><p>SASS是Ruby语言写的，但是两者的语法没有关系。不懂Ruby，照样使用。只是必须先安装Ruby，然后再安装SASS。<br>假定你已经安装好了Ruby，接着在命令行输入下面的命令：gem install sass，然后，就可以使用了。</p><h2 id="2-2-使用"><a href="#2-2-使用" class="headerlink" title="2.2 使用"></a>2.2 使用</h2><p>SASS文件就是普通的文本文件，里面可以直接使用CSS语法。文件后缀名是.scss，意思为Sassy CSS。<br>下面的命令，可以在屏幕上显示.scss文件转化的css代码。（假设文件名为test）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass test.scss</span><br></pre></td></tr></table></figure><br>如果要将显示结果保存成文件，后面再跟一个.css文件名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass test.scss test.css</span><br></pre></td></tr></table></figure><br>SASS提供四个编译风格的选项：</p><ul><li>nested：嵌套缩进的css代码，它是默认值。</li><li>expanded：没有缩进的、扩展的css代码。</li><li>compact：简洁格式的css代码。</li><li>compressed：压缩后的css代码。</li></ul><p>生产环境当中，一般使用最后一个选项<br>sass –style compressed test.sass test.css<br>你也可以让SASS监听某个文件或目录，一旦源文件有变动，就自动生成编译后的版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// watch a file</span><br><span class="line">sass --watch input.scss:output.css</span><br><span class="line">// watch a directory</span><br><span class="line">sass --watch app/sass:public/stylesheets</span><br></pre></td></tr></table></figure><br>SASS的官方网站，提供了一个在线转换器(<a href="http://sass-lang.com/try.html)。你可以在那里，试运行下面的各种例子。" target="_blank" rel="noopener">http://sass-lang.com/try.html)。你可以在那里，试运行下面的各种例子。</a></p><h1 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h1><h2 id="3-1-用法"><a href="#3-1-用法" class="headerlink" title="3.1 用法"></a>3.1 用法</h2><p>SASS允许使用变量，所有变量以$开头。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$blue : #1875e7;　</span><br><span class="line">　　<span class="selector-tag">div</span> &#123;</span><br><span class="line">　　　<span class="attribute">color </span>: $blue;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>如果变量需要镶嵌在字符串之中，就必须需要写在#{}之中。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　$side : left;</span><br><span class="line">　　<span class="selector-class">.rounded</span> &#123;</span><br><span class="line">　　　　border-#&#123;$side&#125;-radius: 5px;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-2-计算功能"><a href="#3-2-计算功能" class="headerlink" title="3.2 计算功能"></a>3.2 计算功能</h2><p>SASS允许在代码中使用算式：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">body</span> &#123;</span><br><span class="line">　　　　<span class="attribute">margin</span>: (<span class="number">14px</span>/<span class="number">2</span>);</span><br><span class="line">　　　　<span class="attribute">top</span>: <span class="number">50px</span> + <span class="number">100px</span>;</span><br><span class="line">　　　　<span class="attribute">right</span>: $var * <span class="number">10%</span>;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-3-嵌套"><a href="#3-3-嵌套" class="headerlink" title="3.3 嵌套"></a>3.3 嵌套</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">div</span> &#123;</span><br><span class="line">  　　hi &#123;</span><br><span class="line">  　　　<span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span><br><span class="line">  　　&#125;</span><br><span class="line">  　&#125;</span><br></pre></td></tr></table></figure><p>属性也可以嵌套，比如border-color属性，可以写成：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">p</span> &#123;</span><br><span class="line">　　　　<span class="attribute">border</span>: &#123;</span><br><span class="line">　　　　　　color: red;</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>注意，border后面必须加上冒号。<br>在嵌套的代码块内，可以使用&amp;引用父元素。比如a:hover伪类，可以写成：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">a</span> &#123;</span><br><span class="line">　　　　&amp;:hover &#123; color: #ffb3ff; &#125;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h1 id="四、代码的重用"><a href="#四、代码的重用" class="headerlink" title="四、代码的重用"></a>四、代码的重用</h1><h2 id="4-1-继承"><a href="#4-1-继承" class="headerlink" title="4.1 继承"></a>4.1 继承</h2><p>SASS允许一个选择器，继承另一个选择器。比如，现有class1：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-class">.class1</span> &#123;</span><br><span class="line">　　　　<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>class2要继承class1，就要使用@extend命令：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-class">.class2</span> &#123;</span><br><span class="line">　　　　@extend .class1;</span><br><span class="line">　　　　<span class="selector-tag">font-size</span><span class="selector-pseudo">:120</span>%;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-2-Mixin"><a href="#4-2-Mixin" class="headerlink" title="4.2 Mixin"></a>4.2 Mixin</h2><p>Mixin有点像C语言的宏（macro），是可以重用的代码块。<br>使用@mixin命令，定义一个代码块。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">mixin</span> left &#123;</span><br><span class="line">　　　　<span class="selector-tag">float</span>: <span class="selector-tag">left</span>;</span><br><span class="line">　　　　<span class="selector-tag">margin-left</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>使用@include命令，调用这个mixin。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">div</span> &#123;</span><br><span class="line">　　　　@include left;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>mixin的强大之处，在于可以指定参数和缺省值。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">mixin</span> left($value: <span class="number">10px</span>) &#123;</span><br><span class="line">　　　　<span class="selector-tag">float</span>: <span class="selector-tag">left</span>;</span><br><span class="line">　　　　margin-right: $value;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>使用的时候，根据需要加入参数：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">div</span> &#123;</span><br><span class="line">　　　　@include left(20px);</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>下面是一个mixin的实例，用来生成浏览器前缀。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">mixin</span> rounded($vert, $horz, $radius: <span class="number">10px</span>) &#123;</span><br><span class="line">　　　　border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">　　　　-moz-border-radius-#&#123;$vert&#125;#&#123;$horz&#125;: $radius;</span><br><span class="line">　　　　-webkit-border-#&#123;$vert&#125;-#&#123;$horz&#125;-radius: $radius;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>使用的时候，可以像下面这样调用：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　#navbar li &#123; @include rounded(top, left); &#125;</span><br><span class="line">　　#footer &#123; @include rounded(top, left, 5px); &#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-3-颜色函数"><a href="#4-3-颜色函数" class="headerlink" title="4.3 颜色函数"></a>4.3 颜色函数</h2><p>SASS提供了一些内置的颜色函数，以便生成系列颜色。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　lighten(#cc3, 10%) // #d6d65c</span><br><span class="line">　　darken(#cc3, 10%) // #a3a329</span><br><span class="line">　　grayscale(#cc3) // #808080</span><br><span class="line">　　complement(#cc3) // #33c</span><br></pre></td></tr></table></figure></p><h2 id="4-4-插入文件"><a href="#4-4-插入文件" class="headerlink" title="4.4 插入文件"></a>4.4 插入文件</h2><p>@import命令，用来插入外部文件。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">import</span> <span class="string">"path/filename.scss"</span>;</span><br></pre></td></tr></table></figure><br>如果插入的是.css文件，则等同于css的import命令。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">import</span> <span class="string">"foo.css"</span>;</span><br></pre></td></tr></table></figure></p><h1 id="五、高级用法"><a href="#五、高级用法" class="headerlink" title="五、高级用法"></a>五、高级用法</h1><h2 id="5-1-条件语句"><a href="#5-1-条件语句" class="headerlink" title="5.1 条件语句"></a>5.1 条件语句</h2><p>@if可以用来判断：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="selector-tag">p</span> &#123;</span><br><span class="line">　　　　@if 1 + 1 == 2 &#123; border: 1px solid; &#125;</span><br><span class="line">　　　　@<span class="keyword">if</span> <span class="number">5</span> &lt; <span class="number">3</span> &#123; <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">dotted</span>; &#125;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>配套的还有@else命令：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">if</span> lightness($color) &gt; <span class="number">30%</span> &#123;</span><br><span class="line">　　　　<span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span><br><span class="line">　　&#125; @<span class="keyword">else</span> &#123;</span><br><span class="line">　　　　<span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h2 id="5-2-循环语句"><a href="#5-2-循环语句" class="headerlink" title="5.2 循环语句"></a>5.2 循环语句</h2><p>SASS支持for循环：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">for</span> $i from <span class="number">1</span> to <span class="number">10</span> &#123;</span><br><span class="line">　　　　.border-#&#123;$i&#125; &#123;</span><br><span class="line">　　　　　　border: #&#123;$i&#125;px solid blue;</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>也支持while循环：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　$i: 6;</span><br><span class="line">　　@<span class="keyword">while</span> $i &gt; <span class="number">0</span> &#123;</span><br><span class="line">　　　　.item-#&#123;$i&#125; &#123; width: 2em * $i; &#125;</span><br><span class="line">　　　　$i: $i - 2;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>each命令，作用与for类似：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">each</span> $member in a, b, c, d &#123;</span><br><span class="line">　　　　.#&#123;$member&#125; &#123;</span><br><span class="line">　　　　　　background-image: url("/image/#&#123;$member&#125;.jpg");</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure></p><h2 id="5-3-自定义函数"><a href="#5-3-自定义函数" class="headerlink" title="5.3 自定义函数"></a>5.3 自定义函数</h2><p>SASS允许用户编写自己的函数。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">　　@<span class="keyword">function</span> double($n) &#123;</span><br><span class="line">　　　　@<span class="keyword">return</span> $n * <span class="number">2</span>;</span><br><span class="line">　　&#125;</span><br><span class="line">　　<span class="selector-id">#sidebar</span> &#123;</span><br><span class="line">　　　　<span class="attribute">width</span>: <span class="built_in">double</span>(5px);</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><br>原文出处：<a href="http://www.ruanyifeng.com/blog/2012/06/sass.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/06/sass.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;学过CSS的人都知道，它不是一种编程语言。你可以用它开发网页样式，但是没法用它编程。也就是说，CSS基本上是设计师的工具，不是程序员的工具。在程序员眼里，CSS是一件很麻烦的东西。它没有变量，也没有条件语句，只是一行行单纯的描述，写起来相当费事。&lt;
      
    
    </summary>
    
      <category term="前端" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="SASS" scheme="https://gkl2013.top/tags/SASS/"/>
    
  </entry>
  
  <entry>
    <title>仿企业微信下载按钮</title>
    <link href="https://gkl2013.top/2017/10/27/%E4%BB%BF%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BD%E6%8C%89%E9%92%AE/"/>
    <id>https://gkl2013.top/2017/10/27/仿企业微信官网下载按钮/</id>
    <published>2017-10-26T16:00:00.000Z</published>
    <updated>2018-02-03T03:43:42.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>该特效主要通过transform实现，首先将通过设置opacity将下载图标和提示文字隐藏，让后在通过hover事件将其显示出来，同时通过transform属性对normal-icon进行缩放。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>HTML代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"download-item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"icon-wrap"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"normal-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hover-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-title"</span>&gt;</span>Windows桌面版<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-desc"</span>&gt;</span>立即下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"download-item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"icon-wrap"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"normal-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hover-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-title"</span>&gt;</span>Windows桌面版<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-desc"</span>&gt;</span>立即下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"download-item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"icon-wrap"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"normal-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hover-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-title"</span>&gt;</span>Windows桌面版<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-desc"</span>&gt;</span>立即下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"download-item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"icon-wrap"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"normal-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hover-icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-title"</span>&gt;</span>Windows桌面版<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"download-item-desc"</span>&gt;</span>立即下载<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br>CSS代码：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css" rel="stylesheet"&gt;</span><br><span class="line">    *&#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">a</span>&#123;</span><br><span class="line">        <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.content</span>&#123;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">236px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: inline-block;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">40px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.icon-wrap</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">display</span>: inline-block;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">25px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.normal-icon</span>,<span class="selector-class">.hover-icon</span>,<span class="selector-class">.download-item-title</span>,<span class="selector-class">.download-item-desc</span>&#123;</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">4s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.normal-icon</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: inline-block;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'./asset/officialImages.png'</span>);</span><br><span class="line">        <span class="attribute">background-position</span>: -<span class="number">268px</span> <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.hover-icon</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'./asset/officialImages.png'</span>);</span><br><span class="line">        <span class="attribute">background-position</span>: -<span class="number">398px</span> -<span class="number">129px</span>;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(1.3,1.3)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item-title</span>&#123;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">4px</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#323232</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item-desc</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>: center;</span><br><span class="line">        <span class="attribute">color</span>: silver;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.normal-icon</span>&#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(.1,.1)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.hover-icon</span>&#123;</span><br><span class="line">        <span class="attribute">opacity</span>: .<span class="number">5</span>;</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">3s</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">scale</span>(1,1)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.download-item-title</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-17px);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.download-item</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.download-item-desc</span>&#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-17px);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="http://oxb3h3vd2.bkt.clouddn.com/17-10-30/Animation.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;该特效主要通过transform实现，首先将通过设置opacity将下载图标和提示文字隐藏，让后在通过hover事件将其显示出来，同时通过t
      
    
    </summary>
    
      <category term="前端开发" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="HTML" scheme="https://gkl2013.top/tags/HTML/"/>
    
      <category term="CSS" scheme="https://gkl2013.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>SEO中动态URL和静态URL的区别</title>
    <link href="https://gkl2013.top/2017/10/24/SEO%E4%B8%AD%E5%8A%A8%E6%80%81URL%E5%92%8C%E9%9D%99%E6%80%81URL%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://gkl2013.top/2017/10/24/SEO中动态URL和静态URL的区别/</id>
    <published>2017-10-23T16:00:00.000Z</published>
    <updated>2018-02-03T03:43:31.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="静态页面（静态URL）"><a href="#静态页面（静态URL）" class="headerlink" title="静态页面（静态URL）"></a>静态页面（静态URL）</h1><p>如<a href="http://www.a.com/a.html" target="_blank" rel="noopener">http://www.a.com/a.html</a><br>静态URL就是指不带有“？”、“=”“&amp;”“php”’asp’等字符的URL，换句话说就是不带有任何参数的URL，就是静态URL,纯静态的URL是以具体的HTML,htm物理文件存在于服务器上的。</p><p>纯静态的URL优势在于访问速度快，体验度较好，因为这是真实存在的物理路径下的文件，真实存在的页面，访问时并不需要重数据库获取内容。但是每次的新内容因为要直接产生静态页面，对服务器的性能是一个很大的考验，想想每个页面都要直接能找到，磁盘和内存消耗相当大。而且当网站数据量达到一定程度的时候，对硬盘的容量要求高，且不便于后期维护，所以现在使用的极少。</p><h1 id="动态页面（动态URL）"><a href="#动态页面（动态URL）" class="headerlink" title="动态页面（动态URL）"></a>动态页面（动态URL）</h1><p>URL又称动态页面，动态链接，即指在URL中出现“?” 这样的参数符号，并以aspx、asp、jsp、php、perl、cgi为后缀的url,如：<br><a href="https://www.baidu.com/s?ie=utf-8&amp;f=3&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=seo" target="_blank" rel="noopener">https://www.baidu.com/s?ie=utf-8&amp;f=3&amp;rsv_bp=1&amp;rsv_idx=1&amp;tn=baidu&amp;wd=seo</a><br>动态URL的优势在于技术维护工作量可以降低很多，但许多交互式的内容，比如购物车、注册等特定的后台功能必须使用。现在购物网站如淘宝/京东等均使用动态URL。</p><p>动态URL的优点：<br>1、空间使用量非常小，一般几万条数据的网站，使用动态页面，可能只有十几兆的文件大小，而使用静态页面少则几十M，多则上百M。<br>2、网站维护方便，由于内容主要集中在数据库中，更新网站时可以批量操作，省时高效<br>3、网站互动性好，可随时获取最新的网站内容。</p><p>动态URL的缺点：<br>第一、动态URL较之静态的URL不利于搜索引擎抓取，如果没有做好参数设置，会导致蜘蛛进入死循环。<br>第二、动态网址的生成是采集数据库的内容，所以不能保证网页内容的稳定性和链接的永久性，所以很难被搜索引擎收录快照。<br>第三、在建设反向链接过程中，因为动态URL的非永久性，所以它不如静态URL有优势。<br>第四、在访问过程中会获取数据库资源，在某些情况下会影响到网站的打开速度。</p><h1 id="伪静态"><a href="#伪静态" class="headerlink" title="伪静态"></a>伪静态</h1><p>伪静态是相对于静态页面而言的<br>从URL结构以及页面名称看，伪静态和静态页面是一样的。伪静态的页面后缀可以是html htm 或者是目录格式，<br>伪静态只是改变了URL的表现形式，实际上还是动态页面，所以可以节省服务器空间，伪静态严格说会增加服务器资源消耗，但是由于减少了URL的参数，便于用户识别，蜘蛛也可避免进入死循环。</p><blockquote><p>根据百度官方文档，正常的动态url对搜索引擎没有影响。url是动态还是静态对搜索引擎没有影响，但建议尽量减少动态url中包含的变量参数，这样即有助于减少url长度，也可以减少让搜索引擎掉入黑洞的风险。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;静态页面（静态URL）&quot;&gt;&lt;a href=&quot;#静态页面（静态URL）&quot; class=&quot;headerlink&quot; title=&quot;静态页面（静态URL）&quot;&gt;&lt;/a&gt;静态页面（静态URL）&lt;/h1&gt;&lt;p&gt;如&lt;a href=&quot;http://www.a.com/a.html&quot;
      
    
    </summary>
    
      <category term="SEO" scheme="https://gkl2013.top/categories/SEO/"/>
    
    
      <category term="SEO" scheme="https://gkl2013.top/tags/SEO/"/>
    
  </entry>
  
  <entry>
    <title>流光效果</title>
    <link href="https://gkl2013.top/2017/10/24/%E6%B5%81%E5%85%89%E6%95%88%E6%9E%9C/"/>
    <id>https://gkl2013.top/2017/10/24/流光效果/</id>
    <published>2017-10-23T16:00:00.000Z</published>
    <updated>2018-02-03T03:43:56.836Z</updated>
    
    <content type="html"><![CDATA[<h2 id="仿sf-gg的广告流光效果"><a href="#仿sf-gg的广告流光效果" class="headerlink" title="仿sf.gg的广告流光效果"></a>仿sf.gg的广告流光效果</h2><p>流光效果实现起来很简单，主要是利用css3的线性渐变（linear-gradient），2D转换（transform）以及倾斜（skew）配合keyframes来实现，当然如果想要兼容一些低版本浏览器，可以使用图片代替。因此，结构相对简单，只需要一个图片父容器（.image-light），图片容器（img），以及流光容器（:before或:after或其他子标签）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"flicker"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bg-wrap"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://via.placeholder.com/400x150"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">keyframes</span> streamer &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: -<span class="number">160%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">160%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flicker</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.flicker</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">160%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">skewX</span>(-25deg) <span class="built_in">translateZ</span>(0);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">skewX</span>(-25deg) <span class="built_in">translateZ</span>(0);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(90deg,hsla(0,0%,100%,0),<span class="built_in">hsla</span>(0,0%,100%,.3) <span class="number">50%</span>,<span class="built_in">hsla</span>(0,0%,100%,0));</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">animation-name</span>: streamer;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">1s</span>;</span><br><span class="line">    <span class="attribute">animation-direction</span>: alternate;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: ease-in-out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;仿sf-gg的广告流光效果&quot;&gt;&lt;a href=&quot;#仿sf-gg的广告流光效果&quot; class=&quot;headerlink&quot; title=&quot;仿sf.gg的广告流光效果&quot;&gt;&lt;/a&gt;仿sf.gg的广告流光效果&lt;/h2&gt;&lt;p&gt;流光效果实现起来很简单，主要是利用css3的线性渐变
      
    
    </summary>
    
      <category term="前端开发" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="CSS3" scheme="https://gkl2013.top/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>搭建hexo-theme-skapp主题博客</title>
    <link href="https://gkl2013.top/2017/10/04/Github+Hexo/"/>
    <id>https://gkl2013.top/2017/10/04/Github+Hexo/</id>
    <published>2017-10-03T16:00:00.000Z</published>
    <updated>2018-02-03T06:01:50.608Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h2><p>这篇文章主要讲解下采用hexo-theme-skapp主题搭建环境的过程中的一些注意事项。</p><h3 id="1-node-gyp安装"><a href="#1-node-gyp安装" class="headerlink" title="1. node-gyp安装"></a>1. node-gyp安装</h3><blockquote><p>gyp是一种根据c++源代码编译的工具，node-gyp就是为node编译c++扩展的时候使用的编译工具。</p></blockquote><h3 id="2-安装Viscal-C-环境"><a href="#2-安装Viscal-C-环境" class="headerlink" title="2. 安装Viscal C++ 环境"></a>2. 安装Viscal C++ 环境</h3><ol><li>下载  <a href="http://landinghub.visualstudio.com/visual-cpp-build-tools" target="_blank" rel="noopener">Visual C++ Build Tools</a> ，建议安装采用默认选项</li><li>安装<a href="https://www.visualstudio.com/products/visual-studio-community-vs" target="_blank" rel="noopener">Visual Studio 2015</a>，需要10个G左右的空间，过程比较慢。</li><li>安装python，去<a href="https://www.python.org/" target="_blank" rel="noopener">python官方网站</a>下载python2.7，这里需要注意python版本，需要2.7的才行。然后默认安装，安装的时候会有一个选项是添加PATH可以勾选，但是安装完以后还是要去环境变量里面查看一下是否添加了。</li></ol><p>根据安装包安装好以后配置环境变量，如果之前安装过python3的话，可以直接进入到python3的文件夹当猴子那个将python.exe改名为python3.exe，以后在cmd当中使用的时候直接输入python进入的是python2.7，输入python3进入的就是python3了。这里对环境变量不太了解的可以百度一下，很简单。</p><h3 id="3-配置依赖"><a href="#3-配置依赖" class="headerlink" title="3. 配置依赖"></a>3. 配置依赖</h3><p>需要注意的一点是：node版本需要7以下<br>配置python<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set python python2.7</span><br></pre></td></tr></table></figure><br>c++构建工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set msvs_version 2015</span><br></pre></td></tr></table></figure><br>配置好了这些，就可以安装<a href="https://github.com/Mrminfive/hexo-theme-skapp" target="_blank" rel="noopener">hexo-theme-skapp官方文档</a>安装依赖。</p><h3 id="4-hexo-theme-skapp注意事项"><a href="#4-hexo-theme-skapp注意事项" class="headerlink" title="4.hexo-theme-skapp注意事项"></a>4.hexo-theme-skapp注意事项</h3><p>该主题下的layout下面_layout.swig有个地方需要修改的，在该文件的末尾有引入通用的js文件，这些js文件的路径错误，需要修改下。<br><img src="http://oxb3h3vd2.bkt.clouddn.com/17-10-5/pz" alt="_layout.swig"></p><h2 id="二、安装访问量统计插件-不蒜子"><a href="#二、安装访问量统计插件-不蒜子" class="headerlink" title="二、安装访问量统计插件-不蒜子"></a>二、安装访问量统计插件-不蒜子</h2><p>添加脚本，在自己的主题里面（一般是footer）引入js脚本。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="1-使用方法"><a href="#1-使用方法" class="headerlink" title="1. 使用方法"></a>1. 使用方法</h3><p>在需要的地方添加下面的代码，可以选择添加任意一种代码或同时添加两种代码。<br>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_pv"</span>&gt;</span></span><br><span class="line">    本站总访问量<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_container_site_uv"</span>&gt;</span></span><br><span class="line">  本站访客数<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>人次</span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><br>样式可以根据自己的需要进行修改。</p><h2 id="三、添加评论"><a href="#三、添加评论" class="headerlink" title="三、添加评论"></a>三、添加评论</h2><p>评论推荐使用<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">Gitalk</a>，是一个基于 Github Issue和Preact开发的评论插件。主要特点如下：</p><h3 id="1-Register-a-new-OAuth-application"><a href="#1-Register-a-new-OAuth-application" class="headerlink" title="1. Register a new OAuth application"></a>1. Register a new OAuth application</h3><p>在<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">OAuth注册页面</a>完成注册，注册成功后会获得client_id和client_secret</p><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  id:</span> <span class="string">''</span>  <span class="comment">#页面 ID, 可选。默认为 location.href</span></span><br><span class="line"><span class="attr">  owner:</span> <span class="string">'xxx'</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">xxx.github.io</span>   <span class="comment">#存储评论的 repo</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">'xxx'</span>  <span class="comment">#你的 Client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">'xxx'</span>  <span class="comment">#你的 Client secret</span></span><br></pre></td></tr></table></figure><p>这里需要注意的是创建issues的长度是又限制的，默认的是当前页面地址，推荐使用文章的标题作为id</p><h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://github.com/Mrminfive/hexo-theme-skapp" target="_blank" rel="noopener">https://github.com/Mrminfive/hexo-theme-skapp</a><br><a href="https://github.com/nodejs/node-gyp" target="_blank" rel="noopener">https://github.com/nodejs/node-gyp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、环境搭建&quot;&gt;&lt;a href=&quot;#一、环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一、环境搭建&quot;&gt;&lt;/a&gt;一、环境搭建&lt;/h2&gt;&lt;p&gt;这篇文章主要讲解下采用hexo-theme-skapp主题搭建环境的过程中的一些注意事项。&lt;/p&gt;
&lt;h3 
      
    
    </summary>
    
      <category term="前端开发" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hexo" scheme="https://gkl2013.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>VUE2.0 自定义组件初体验</title>
    <link href="https://gkl2013.top/2017/10/04/VUE2.0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://gkl2013.top/2017/10/04/VUE2.0自定义组件初体验/</id>
    <published>2017-10-03T16:00:00.000Z</published>
    <updated>2018-02-03T03:43:31.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h2><p>组件（Component）是 Vue.js 最强大的功能之一。组件可以扩展 HTML 元素，封装可重用的代码。在较高层面上，组件是自定义元素， Vue.js 的编译器为它添加特殊功能。在有些情况下，组件也可以是原生 HTML 元素的形式，以 is 特性扩展。</p><h2 id="创建单文件组件"><a href="#创建单文件组件" class="headerlink" title="创建单文件组件"></a>创建单文件组件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  export default &#123;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"stylus"</span> <span class="attr">rel</span>=<span class="string">"stylesheet/stylus"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h2><p>注册分为两种：局部注册和全局注册。注册一个全局组件，可以使用Vue.component(tagName, options)。 把构造函数注册到my-component这个 id Vue.component(‘my-component’, MyComponent)，为了写法更简单，也可以直接传入 option 对象来代替构造函数，Vue.component() 会为你隐式调用 Vue.extend() 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册全局组件,指定之前设定的元素名,然后传入对象</span></span><br><span class="line">Vue.component(<span class="string">'my-component'</span>, &#123;</span><br><span class="line"> template: <span class="string">'&lt;div&gt;hello world!&lt;/div&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>之后就能在父级实例的模板中使用注册过的组件了 (务必在初始化根实例之前注册组件)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;my-component&gt;<span class="xml"><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>我们没有必要，也不应该全局注册所有组件。你可以限制一个组件仅对另一个组件及其后代可用，只要在另一个组件的 components 选项中传入这个组件即可。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> header <span class="keyword">from</span> <span class="string">'./components/header/header.vue'</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">'v-header'</span>: header</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="组件构成"><a href="#组件构成" class="headerlink" title="组件构成"></a>组件构成</h2><h3 id="data对象"><a href="#data对象" class="headerlink" title="data对象"></a>data对象</h3><p>data 必须是函数。因为如果不是函数的，声明多个组件的时候，他们共享的就是同一个data，这样就会乱掉。如果通过函数返回，那么每个组件维持自己的data作用域。该data属性只在其component中可见。</p><h4 id="通过-prop-传递数据"><a href="#通过-prop-传递数据" class="headerlink" title="通过 prop 传递数据"></a>通过 prop 传递数据</h4><p>组件实例的作用域是孤立的,组件和组件之间，即使有同名属性，值也不共享。这意味着不能并且不应该在子组件的模板内直接引用父组件的数据。可以使用 props 把数据传给子组件。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'child'</span>, &#123;</span><br><span class="line">  <span class="comment">// 声明 props</span></span><br><span class="line">  props: [<span class="string">'message'</span>],</span><br><span class="line">  <span class="comment">// 就像 data 一样，prop 可以用在模板内</span></span><br><span class="line">  <span class="comment">// 同样也可以在 vm 实例中像 “this.message” 这样使用</span></span><br><span class="line">  template: <span class="string">'&lt;span&gt;&lt;/span&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><blockquote><p>需要注意的是HTML 特性是不区分大小写的。所以，当使用的不是字符串模版，camelCased (驼峰式) 命名的 prop 需要转换为相对应的 kebab-case (短横线隔开式) 命名，这点在angularjs的指令中也一样。</p></blockquote><blockquote><p>在vue2.0中prop 是单向绑定的：当父组件的属性变化时，将传导给子组件，但是不会反过来。这是为了防止子组件无意修改了父组件的状态但这会让应用的数据流难以理解。每次父组件更新时，子组件的所有 prop 都会更新为最新值。这意味着你不应该在子组件内部改变 prop 。如果你这么做了，Vue 会在控制台给出警告。这点官方文档给出了明确的说明和解决办法。</p></blockquote><p>当我开发一个通用组件时，需要对传入的数据进行严格的验证，我们可以定义传入数据的类型，同时也可以设置其默认值。如果传入的数据不符合规格，Vue 会发出警告。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">'example'</span>, &#123;</span><br><span class="line">props: &#123;</span><br><span class="line"><span class="comment">// 基础类型检测 （`null` 意思是任何类型都可以）</span></span><br><span class="line">propA: <span class="built_in">Number</span>,</span><br><span class="line"><span class="comment">// 多种类型</span></span><br><span class="line">propB: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span><br><span class="line"><span class="comment">// 必传且是字符串</span></span><br><span class="line">propC: &#123;</span><br><span class="line">  type: <span class="built_in">String</span>,</span><br><span class="line">  required: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 数字，有默认值</span></span><br><span class="line">propD: &#123;</span><br><span class="line">  type: <span class="built_in">Number</span>,</span><br><span class="line">  <span class="keyword">default</span>: <span class="number">100</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 数组／对象的默认值应当由一个工厂函数返回</span></span><br><span class="line">propE: &#123;</span><br><span class="line">  type: <span class="built_in">Object</span>,</span><br><span class="line">  <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">'hello'</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 自定义验证函数</span></span><br><span class="line">propF: &#123;</span><br><span class="line">  validator: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value &gt; <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>type 是一个自定义构造器函数，可以通过使用 instanceof 检测。以下是其原生构造器：</p><ul><li>String</li><li>Number</li><li>Boolean</li><li>Function</li><li>Object</li><li>Array</li></ul><hr><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>Vue实例有一个完整的生命周期，也就是从开始创建、初始化数据、编译模板、挂载Dom、渲染→更新→渲染、卸载等一系列过程，我们称这是Vue的生命周期。通俗说就是Vue实例从创建到销毁的过程，就是生命周期。首先看看下面官网的一张生命周期的图：</p><p><img src="http://upload-images.jianshu.io/upload_images/2378260-6338e6e16a378ce5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="VUE生命周期图"></p><p>Vue提供的可以注册的钩子都在上图片的红色框标注。 他们分别是：</p><ol><li>beforeCreate：在实例初始化之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。</li><li>created：实例已经创建完成之后被调用。在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见。</li><li>beforeMount：在挂载开始之前被调用：相关的 render 函数首次被调用。</li><li>mounted：el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。</li><li>beforeUpdate：数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。 你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。</li><li>updated：由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态，因为这可能会导致更新无限循环。该钩子在服务器端渲染期间不被调用。</li><li>beforeDestroy：实例销毁之前调用。在这一步，实例仍然完全可用。</li><li>destroyed：Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我的理解&quot;&gt;&lt;a href=&quot;#我的理解&quot; class=&quot;headerlink&quot; title=&quot;我的理解&quot;&gt;&lt;/a&gt;我的理解&lt;/h2&gt;&lt;p&gt;组件（Component）是 Vue.js 最强大的功能之一。组件可以扩展 HTML 元素，封装可重用的代码。在较高层面上，
      
    
    </summary>
    
      <category term="前端开发" scheme="https://gkl2013.top/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Vue" scheme="https://gkl2013.top/tags/Vue/"/>
    
  </entry>
  
</feed>
